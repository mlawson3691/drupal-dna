<?php

class DNAUnitTests extends DrupalUnitTestCase {

    public static function getInfo() {
        return array(
            'name' => 'DNA Unit Tests',
            'description' => 'Unit tests for DNA module.',
            'group' => 'Custom Tests',
        );
    }

    function testDNA() {
        $description = 'Successfully handles "A" input';
        $input = 'A';
        $output = match_dna($input);
        $expected_output = 'T';
        $this->assertEqual($output, $expected_output, $description);

        $description = 'Successfully handles "T" input';
        $input = 'T';
        $output = match_dna($input);
        $expected_output = 'A';
        $this->assertEqual($output, $expected_output, $description);

        $description = 'Successfully handles "C" input';
        $input = 'C';
        $output = match_dna($input);
        $expected_output = 'G';
        $this->assertEqual($output, $expected_output, $description);

        $description = 'Successfully handles "G" input';
        $input = 'G';
        $output = match_dna($input);
        $expected_output = 'C';
        $this->assertEqual($output, $expected_output, $description);

        $description = 'Successfully handles multiple characters';
        $input = 'ATGC';
        $output = match_dna($input);
        $expected_output = 'TACG';
        $this->assertEqual($output, $expected_output, $description);

        $description = 'Successfully handles lowercase characters';
        $input = 'atgc';
        $output = match_dna($input);
        $expected_output = 'TACG';
        $this->assertEqual($output, $expected_output, $description);
    }
}

class DNAFunctionalTests extends DrupalWebTestCase {

    public static function getInfo() {
        return array(
            'name' => 'DNA Functional Tests',
            'description' => 'Functional Tests for the DNA module.',
            'group' => 'Custom Tests',
        );
    }

    public function setUp() {
        parent::setUp(array('dna'));
    }

    public function testDNAInvalidInput() {
        $edit['dna_strand'] = 'dog';

        $this->drupalPost('dna_calculator', $edit, t('Go!'));
        $this->assertText(t('You may only enter "A", "T", "C", and "G".'));
    }

    public function testDNAValidInput() {
        $edit['dna_strand'] = 'atcg';

        $this->drupalPost('dna_calculator', $edit, t('Go!'));
        $this->assertText(t('TAGC'));
    }
}
